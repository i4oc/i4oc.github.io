/*
 * The data exposed via this script are taken from
 * https://www.crossref.org/reports/members-with-open-references/.
 * The logic for including/excluding publishers has been directly
 * embedded in this scripts.
 * Be aware: one has also to check if the 'limited' (if present) and 'closed' amount is below a given threshold
 */

 function sort_json(prop) {
    return function(a, b) {
        if (a[prop].toLowerCase() > b[prop].toLowerCase()) {
            return 1;
        } else if (a[prop].toLowerCase() < b[prop].toLowerCase()) {
            return -1;
        }
        return 0;
    }
}

function get_csv(pub_path) {
    $.ajax({
        url : pub_path,
        dataType: "text",
        success : function (pub_data) {
            create_table(pub_data);
        }
    });
}

function create_table(pub_data) {
    var table = $("#partpublishers");

    var json_data = $.csv.toObjects(pub_data);
    json_data.sort(sort_json("primary_name"));
    console.log(json_data);

    var remo_array = [];

    var done = [];
    var i = 0;
    var new_row = true;
    var fine_items = 0;

    // Group the list of publishers under their corresponding alphabetic letter
    // The first group is the one having non alphabetic letter as first letter, i.e., "#"
    var new_group = false;
    var group = "#"
    //add this <tr> if you want to toggle the corresponding list of each group
    //table.append("<tr id="+group.toLowerCase()+" class='group-top'><td><button onclick=on_header_click('"+group.toLowerCase()+"') class='group-top'>Group "+group+"</button></td></tr>");
    table.append("<tr id=groupheader_"+group.toLowerCase()+" class='group-top'><td><strong>"+group+"</strong></td></tr>");

    json_data.forEach(function(entry) {

        /* The name of the publisher */
        var cur_entry_text = entry["primary_name"];

        if (i == 0 && new_row) {
            table.append("<tr id=groupmember_"+group.toLowerCase()+" class='group-tr'></tr>");
            new_row = false;
        }

        /* The publisher will be considered only if it is not included in the remove list */
        if ($.inArray(cur_entry_text, remo_array) == -1) {
            /* Other constraints to check */
            /* count_current_type, count_backfile_type,deposits_references_current,deposits_references_backfile,references_current_type,references_backfile_type*/

            var back_doi = entry["count_backfile_type"]
            var back_deposit = entry["deposits_references_backfile"]
            var current_doi = entry["count_current_type"]
            var current_deposit = entry["deposits_references_current"]
            var references_current_type = entry["references_current_type"]
            var references_backfile_type = entry["references_backfile_type"]

            //console.log(back_doi, back_deposit, current_doi, current_deposit, references_current_type, references_backfile_type);

            if (    current_deposit == "TRUE" &&
                    (current_doi > 0 || (backfile_doi > 0 && back_deposit == "TRUE")) &&
                    references_current_type >= 0.75 &&
                    references_backfile_type >= 0.25) {

                var pub_name = cur_entry_text;
                var pub_id = entry["id"]

                if ($.inArray(pub_name, done) == -1) {
                    i = (i + 1) % 2;
                    new_row = true;
                    fine_items = fine_items + 1;

                    /*check first letter: to group publishers together*/
                    /*in case not alphabetic it goes under "#"*/
                    var first_char = cur_entry_text[0]

                    if ((/[a-zA-Z]/).test(first_char)) {
                      new_group = group != first_char.toUpperCase();
                      group = first_char.toUpperCase();
                    }else{
                      new_group = group != "#";
                      group = "#";
                    }

                    if (new_group) {
                      //add this <tr> if you want to toggle the corresponding list of each group
                      //table.append("<tr id="+group.toLowerCase()+" class='group-top'><td><button onclick=on_header_click('"+group.toLowerCase()+"') class='group-top'><strong>"+group+"</strong></button></td></tr>");
                      table.append("<tr id=groupheader_"+group.toLowerCase()+" class='group-top'><td><strong>"+group+"</strong></td></tr>");
                      table.append("<tr id=groupmember_"+group.toLowerCase()+" class='group-tr'></tr>");
                      new_group = false;
                      new_row = false;
                      i = 1;
                    }

                    done.push(pub_name);
                    pub_name = "<a href='https://www.crossref.org/members/prep/" +
                        pub_id + "'>" + pub_name + "</a>";

                    $("#partpublishers tr:last-child").append("<td>" + pub_name + "</td>");
                }
            }
            console.log(fine_items);
        }
    });
}


var data_dir = "data/"; // PRODUCTION
// data_dir = "https://i4oc.org/data/" //LOCAL TESTS

var pub_file = data_dir + "crossref.txt";

var table = $("#partpublishers");
get_csv(pub_file);

//Set events
function on_header_click(group) {
  $( "tr.group-tr" ).each(function() {
    if ($( this ).attr('id') == group){
      $( this ).toggle();
    }
  });
};
